// applies global styles that cannot be applied from within the shadow dom
@mixin core($overrides: ()) {
  .berg-layout-resizing-vertical,
  .berg-layout-resizing-horizontal {
    .berg-panel {
      transition-property: none;
    }
  }

  @include z-index();
  @include resizing($overrides);
  @include positioning();
}

@mixin positioning() {
  .berg-panel-top,
  .berg-panel-right,
  .berg-panel-bottom,
  .berg-panel-left {
    position: fixed;
  }

  .berg-panel-top {
    top: 0;
    right: var(--berg-panel-right-size);
    bottom: calc(100% - var(--berg-panel-top-size));
    left: var(--berg-panel-left-size);

    &.berg-panel-collapsed {
      top: calc(var(--berg-panel-top-size) * -1);
      bottom: 100%;
    }

    &.berg-panel-top-above-left {
      left: 0;
    }

    &.berg-panel-top-above-right {
      right: 0;
    }

    &.berg-panel-absolute {
      left: 0;
      right: 0;
    }

    .berg-layout-right-absolute & {
      right: 0;
    }

    .berg-layout-left-absolute & {
      top: 0;
    }
  }

  .berg-panel-right {
    top: 0;
    right: 0;
    bottom: 0;
    left: calc(100% - var(--berg-panel-right-size));

    &.berg-panel-collapsed {
      right: calc(var(--berg-panel-right-size) * -1);
      left: 100%;
    }

    &.berg-panel-top-above-right {
      top: var(--berg-panel-top-size);
    }

    &.berg-panel-bottom-below-right {
      bottom: var(--berg-panel-bottom-size);
    }

    &.berg-panel-absolute {
      top: 0;
      bottom: 0;
    }

    .berg-layout-top-absolute & {
      top: 0;
    }

    .berg-layout-bottom-absolute & {
      bottom: 0;
    }
  }

  .berg-panel-bottom {
    top: calc(100% - var(--berg-panel-bottom-size));
    right: var(--berg-panel-right-size);
    bottom: 0;
    left: var(--berg-panel-left-size);

    &.berg-panel-collapsed {
      bottom: calc(var(--berg-panel-bottom-size) * -1);
      top: 100%;
    }

    &.berg-panel-bottom-below-left {
      left: 0;
    }

    &.berg-panel-bottom-below-right {
      right: 0;
    }

    &.berg-panel-absolute {
      left: 0;
      right: 0;
    }

    .berg-layout-right-absolute & {
      right: 0;
    }

    .berg-layout-left-absolute & {
      left: 0;
    }
  }

  .berg-panel-left {
    top: 0;
    right: calc(100% - var(--berg-panel-left-size));
    bottom: 0;
    left: 0;

    &.berg-panel-collapsed {
      left: calc(var(--berg-panel-left-size) * -1);
      right: 100%;
    }

    &.berg-panel-top-above-left {
      top: var(--berg-panel-top-size);
    }

    &.berg-panel-bottom-below-left {
      bottom: var(--berg-panel-bottom-size);
    }

    &.berg-panel-absolute {
      top: 0;
      bottom: 0;
    }

    .berg-layout-top-absolute & {
      top: 0;
    }

    .berg-layout-bottom-absolute & {
      bottom: 0;
    }
  }

  .berg-panel-center {
    padding-top: var(--berg-panel-top-size);
    padding-right: var(--berg-panel-right-size);
    padding-bottom: var(--berg-panel-bottom-size);
    padding-left: var(--berg-panel-left-size);

    .berg-layout-top-absolute & {
      padding-top: 0;
    }

    .berg-layout-right-absolute & {
      padding-right: 0;
    }

    .berg-layout-bottom-absolute & {
      padding-bottom: 0;
    }

    .berg-layout-left-absolute & {
      padding-left: 0;
    }
  }

  .berg-layout-top-collapsed {
    .berg-panel-right,
    .berg-panel-left {
      top: 0;
    }

    .berg-panel-center {
      padding-top: 0;
    }
  }

  .berg-layout-right-collapsed {
    .berg-panel-top,
    .berg-panel-bottom {
      right: 0;
    }

    .berg-panel-center {
      padding-right: 0;
    }
  }

  .berg-layout-bottom-collapsed {
    .berg-panel-right,
    .berg-panel-left {
      bottom: 0;
    }

    .berg-panel-center {
      padding-bottom: 0;
    }
  }

  .berg-layout-left-collapsed {
    .berg-panel-top,
    .berg-panel-bottom {
      left: 0;
    }

    .berg-panel-center {
      padding-left: 0;
    }
  }
}

@mixin resizing($overrides) {
  $resizing-indicator-size: map-get($overrides, 'resizing-indicator-size') or
    6px;

  .berg-panel-resize-toggle {
    position: absolute;
    z-index: 2;
  }

  .berg-panel-resize-toggle-left,
  .berg-panel-resize-toggle-right {
    top: 0;
    bottom: 0;
    width: $resizing-indicator-size;
  }

  .berg-panel-resize-toggle-right {
    left: 0;
  }

  .berg-panel-resize-toggle-left {
    right: -#{$resizing-indicator-size};
  }

  .berg-panel-resize-toggle-top,
  .berg-panel-resize-toggle-bottom {
    right: 0;
    left: 0;
    height: $resizing-indicator-size;
  }

  .berg-panel-resize-toggle-top {
    bottom: -#{$resizing-indicator-size};
  }

  .berg-panel-resize-toggle-bottom {
    top: 0;
  }
}

@mixin z-index() {
  .berg-panel-right {
    z-index: 6;

    &.berg-panel-top-above-right {
      z-index: 4;
    }

    &.berg-panel-top-above-right {
      z-index: 2;
    }

    &.berg-panel-top-above-right.berg-panel-bottom-below-right {
      z-index: 1;
    }
  }

  .berg-panel-left {
    z-index: 6;

    .berg-panel-top-above-left {
      z-index: 4;
    }

    .berg-panel-top-above-left {
      z-index: 2;
    }

    .berg-panel-top-above-left.berg-panel-bottom-below-left {
      z-index: 1;
    }
  }

  .berg-panel-bottom {
    z-index: 3;
  }

  .berg-panel-top {
    z-index: 5;
  }

  .berg-panel-absolute {
    // should be one above the backdrop z-index
    z-index: 8 !important;
  }
}
